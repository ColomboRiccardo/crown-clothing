{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { signInSuccess, signInFailure } from '../user.actions.js';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(dignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(dignInFailure(error));\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfileDocument, user); //console.log(userRef);\n\n    const userSnapshot = yield userRef.get(); //console.log(userSnapshot);\n\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["C:/Users/Chunky Timmy/Documents/Programming/neagoie-stuff/reactCourse/crown-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","signInSuccess","signInFailure","auth","googleProvider","createUserProfileDocument","onGoogleSignInStart","GOOGLE_SIGN_IN_START","signInWithGoogle","user","signInWithPopup","userRef","userSnapshot","get","dignInSuccess","id","data","error","dignInFailure","onEmailSignInStart","EMAIL_SIGN_IN_START","signInWithEmail","payload","email","password","signInWithEmailAndPassword","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,oBAA7C;AAEA,SACCC,IADD,EAECC,cAFD,EAGCC,yBAHD,QAIO,+BAJP;AAMA,OAAO,UAAUC,mBAAV,GAAgC;AACtC,QAAMV,UAAU,CAACI,eAAe,CAACO,oBAAjB,EAAuCC,gBAAvC,CAAhB;AACA;AAED,OAAO,UAAUA,gBAAV,GAA6B;AACnC,MAAI;AACH,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMN,IAAI,CAACO,eAAL,CAAqBN,cAArB,CAAvB;AACA,UAAMO,OAAO,GAAG,MAAMZ,IAAI,CAACM,yBAAD,EAA4BI,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMhB,GAAG,CAACiB,aAAa,CAAC;AAAEC,MAAAA,EAAE,EAAEH,YAAY,CAACG,EAAnB;AAAuB,SAAGH,YAAY,CAACI,IAAb;AAA1B,KAAD,CAAd,CAAT;AACA,GALD,CAKE,OAAOC,KAAP,EAAc;AACf,UAAMpB,GAAG,CAACqB,aAAa,CAACD,KAAD,CAAd,CAAT;AACA;AACD;AAED,OAAO,UAAUE,kBAAV,GAA+B;AACrC,QAAMvB,UAAU,CAACI,eAAe,CAACoB,mBAAjB,EAAsCC,eAAtC,CAAhB;AACA;AAED,OAAO,UAAUA,eAAV,CAA0B;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAX,CAA1B,EAA4D;AAClE,MAAI;AACH,UAAM;AAAEf,MAAAA;AAAF,QAAW,MAAMN,IAAI,CAACsB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAAvB;AACA,UAAMb,OAAO,GAAG,MAAMZ,IAAI,CAACM,yBAAD,EAA4BI,IAA5B,CAA1B,CAFG,CAGH;;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B,CAJG,CAKH;;AACA,UAAMhB,GAAG,CAACI,aAAa,CAAC;AAAEc,MAAAA,EAAE,EAAEH,YAAY,CAACG,EAAnB;AAAuB,SAAGH,YAAY,CAACI,IAAb;AAA1B,KAAD,CAAd,CAAT;AACA,GAPD,CAOE,OAAOC,KAAP,EAAc;AACf,UAAMpB,GAAG,CAACK,aAAa,CAACe,KAAD,CAAd,CAAT;AACA;AACD;AAED,OAAO,UAAUS,SAAV,GAAsB;AAC5B,QAAM5B,GAAG,CAAC,CAACC,IAAI,CAACO,mBAAD,CAAL,EAA4BP,IAAI,CAACoB,kBAAD,CAAhC,CAAD,CAAT;AACA","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\r\n\r\nimport UserActionTypes from './user.types';\r\n\r\nimport { signInSuccess, signInFailure } from '../user.actions.js';\r\n\r\nimport {\r\n\tauth,\r\n\tgoogleProvider,\r\n\tcreateUserProfileDocument,\r\n} from '../../firebase/firebase.utils';\r\n\r\nexport function* onGoogleSignInStart() {\r\n\tyield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\r\n}\r\n\r\nexport function* signInWithGoogle() {\r\n\ttry {\r\n\t\tconst { user } = yield auth.signInWithPopup(googleProvider);\r\n\t\tconst userRef = yield call(createUserProfileDocument, user);\r\n\t\tconst userSnapshot = yield userRef.get();\r\n\t\tyield put(dignInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\r\n\t} catch (error) {\r\n\t\tyield put(dignInFailure(error));\r\n\t}\r\n}\r\n\r\nexport function* onEmailSignInStart() {\r\n\tyield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\r\n}\r\n\r\nexport function* signInWithEmail({ payload: { email, password } }) {\r\n\ttry {\r\n\t\tconst { user } = yield auth.signInWithEmailAndPassword(email, password);\r\n\t\tconst userRef = yield call(createUserProfileDocument, user);\r\n\t\t//console.log(userRef);\r\n\t\tconst userSnapshot = yield userRef.get();\r\n\t\t//console.log(userSnapshot);\r\n\t\tyield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\r\n\t} catch (error) {\r\n\t\tyield put(signInFailure(error));\r\n\t}\r\n}\r\n\r\nexport function* userSagas() {\r\n\tyield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}