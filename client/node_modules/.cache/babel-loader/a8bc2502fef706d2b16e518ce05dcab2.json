{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Chunky Timmy\\\\Documents\\\\Programming\\\\neagoie-stuff\\\\reactCourse\\\\crown-clothing\\\\src\\\\components\\\\sign-in\\\\sign-in.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport './sign-in.style.scss';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user.actions.js';\n\nconst SignIn = ({\n  emailSignInStart\n}) => {\n  _s();\n\n  const [userCredentials, setCredentials] = useState({\n    email: '',\n    password: ''\n  });\n\n  const handleChange = event => {\n    const {\n      value,\n      name\n    } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const {\n      email,\n      password\n    } = userCredentials;\n    emailSignInStart(email, password);\n  };\n\n  const {\n    googleSignInStart\n  } = this.props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sign-in\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"I already have an account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Sign In with your email and password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        name: \"email\",\n        value: this.state.email,\n        handleChange: this.handleChange,\n        required: true,\n        label: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        name: \"password\",\n        value: this.state.password,\n        handleChange: this.handleChange,\n        required: true,\n        label: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"submit\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"button\",\n          onClick: googleSignInStart,\n          isGoogleSignIn: true,\n          children: \"Sign in with Google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 3\n  }, this);\n};\n\n_s(SignIn, \"gvjWK71t8cLDhzseTqnP2Se48gA=\");\n\n_c = SignIn;\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["C:/Users/Chunky Timmy/Documents/Programming/neagoie-stuff/reactCourse/crown-clothing/src/components/sign-in/sign-in.component.jsx"],"names":["React","useState","connect","FormInput","CustomButton","googleSignInStart","emailSignInStart","SignIn","userCredentials","setCredentials","email","password","handleChange","event","value","name","target","setState","handleSubmit","preventDefault","props","state","mapDispatchToProps","dispatch"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AAEA,OAAO,sBAAP;AAEA,SACCC,iBADD,EAECC,gBAFD,QAGO,6BAHP;;AAKA,MAAMC,MAAM,GAAG,CAAC;AAAED,EAAAA;AAAF,CAAD,KAA0B;AAAA;;AACxC,QAAM,CAACE,eAAD,EAAkBC,cAAlB,IAAoCR,QAAQ,CAAC;AAClDS,IAAAA,KAAK,EAAE,EAD2C;AAElDC,IAAAA,QAAQ,EAAE;AAFwC,GAAD,CAAlD;;AAKA,QAAMC,YAAY,GAAGC,KAAK,IAAI;AAC7B,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAkBF,KAAK,CAACG,MAA9B;AACA,SAAKC,QAAL,CAAc;AAAE,OAACF,IAAD,GAAQD;AAAV,KAAd;AACA,GAHD;;AAKA,QAAMI,YAAY,GAAG,MAAML,KAAN,IAAe;AACnCA,IAAAA,KAAK,CAACM,cAAN;AACA,UAAM;AAAET,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAsBH,eAA5B;AAEAF,IAAAA,gBAAgB,CAACI,KAAD,EAAQC,QAAR,CAAhB;AACA,GALD;;AAOA,QAAM;AAAEN,IAAAA;AAAF,MAAwB,KAAKe,KAAnC;AAEA,sBACC;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD,eAGC;AAAM,MAAA,QAAQ,EAAE,KAAKF,YAArB;AAAA,8BACC,QAAC,SAAD;AACC,QAAA,IAAI,EAAC,OADN;AAEC,QAAA,KAAK,EAAE,KAAKG,KAAL,CAAWX,KAFnB;AAGC,QAAA,YAAY,EAAE,KAAKE,YAHpB;AAIC,QAAA,QAAQ,MAJT;AAKC,QAAA,KAAK,EAAC;AALP;AAAA;AAAA;AAAA;AAAA,cADD,eASC,QAAC,SAAD;AACC,QAAA,IAAI,EAAC,UADN;AAEC,QAAA,KAAK,EAAE,KAAKS,KAAL,CAAWV,QAFnB;AAGC,QAAA,YAAY,EAAE,KAAKC,YAHpB;AAIC,QAAA,QAAQ,MAJT;AAKC,QAAA,KAAK,EAAC;AALP;AAAA;AAAA;AAAA;AAAA,cATD,eAgBC;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCACC,QAAC,YAAD;AAAc,UAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC,QAAC,YAAD;AACC,UAAA,IAAI,EAAC,QADN;AAEC,UAAA,OAAO,EAAEP,iBAFV;AAGC,UAAA,cAAc,MAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFD;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBD;AAAA;AAAA;AAAA;AAAA;AAAA,YAHD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAiCA,CArDD;;GAAME,M;;KAAAA,M;;AAuDN,MAAMe,kBAAkB,GAAGC,QAAQ,KAAK;AACvClB,EAAAA,iBAAiB,EAAE,MAAMkB,QAAQ,CAAClB,iBAAiB,EAAlB,CADM;AAEvCC,EAAAA,gBAAgB,EAAE,CAACI,KAAD,EAAQC,QAAR,KACjBY,QAAQ,CAACjB,gBAAgB,CAAC;AAAEI,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAD,CAAjB;AAH8B,CAAL,CAAnC;;AAMA,eAAeT,OAAO,CAAC,IAAD,EAAOoB,kBAAP,CAAP,CAAkCf,MAAlC,CAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n\r\nimport './sign-in.style.scss';\r\n\r\nimport {\r\n\tgoogleSignInStart,\r\n\temailSignInStart,\r\n} from '../../redux/user.actions.js';\r\n\r\nconst SignIn = ({ emailSignInStart }) => {\r\n\tconst [userCredentials, setCredentials] = useState({\r\n\t\temail: '',\r\n\t\tpassword: '',\r\n\t});\r\n\r\n\tconst handleChange = event => {\r\n\t\tconst { value, name } = event.target;\r\n\t\tthis.setState({ [name]: value });\r\n\t};\r\n\r\n\tconst handleSubmit = async event => {\r\n\t\tevent.preventDefault();\r\n\t\tconst { email, password } = userCredentials;\r\n\r\n\t\temailSignInStart(email, password);\r\n\t};\r\n\r\n\tconst { googleSignInStart } = this.props;\r\n\r\n\treturn (\r\n\t\t<div className='sign-in'>\r\n\t\t\t<h2>I already have an account</h2>\r\n\t\t\t<span>Sign In with your email and password</span>\r\n\t\t\t<form onSubmit={this.handleSubmit}>\r\n\t\t\t\t<FormInput\r\n\t\t\t\t\tname='email'\r\n\t\t\t\t\tvalue={this.state.email}\r\n\t\t\t\t\thandleChange={this.handleChange}\r\n\t\t\t\t\trequired\r\n\t\t\t\t\tlabel='email'\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<FormInput\r\n\t\t\t\t\tname='password'\r\n\t\t\t\t\tvalue={this.state.password}\r\n\t\t\t\t\thandleChange={this.handleChange}\r\n\t\t\t\t\trequired\r\n\t\t\t\t\tlabel='password'\r\n\t\t\t\t/>\r\n\t\t\t\t<div className='buttons'>\r\n\t\t\t\t\t<CustomButton type='submit'>Sign In</CustomButton>\r\n\t\t\t\t\t<CustomButton\r\n\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\tonClick={googleSignInStart}\r\n\t\t\t\t\t\tisGoogleSignIn\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tSign in with Google\r\n\t\t\t\t\t</CustomButton>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n\tgoogleSignInStart: () => dispatch(googleSignInStart()),\r\n\temailSignInStart: (email, password) =>\r\n\t\tdispatch(emailSignInStart({ email, password })),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(SignIn);\r\n"]},"metadata":{},"sourceType":"module"}