{"ast":null,"code":"const UserActionTypes = {\n  SET_CURRENT_USER: 'SET_CURRENT_USER',\n  GOOGLE_SIGN_IN_START: 'GOOGLE_SIGN_IN_START',\n  SIGN_IN_SUCCESS: 'SIGN_IN_SUCCESS',\n  SIGN_IN_FAILURE: 'SIGN_IN_FAILURE',\n  EMAIL_SIGN_IN_START: 'EMAIL_SIGN_IN_START',\n  CHECK_USER_SESSION: 'CHECK_USER_SESSION',\n  SIGN_OUT_START: 'SIGN_OUT_START',\n  SIGN_OUT_SUCCESS: 'SIGN_OUT_SUCCESS',\n  SIGN_OUT_FAILURE: 'SIGN_OUT_FAILURE',\n  SIGN_UP_START: 'SIGN_UP_START',\n  SIGN_UP_SUCCESS: 'SIGN_UP_SUCCESS',\n  SIGN_UP_FAILURE: 'SIGN_UP_FAILURE'\n};\nexport default UserActionTypes;\nuseEffect(() => {\n  const fetchFunc = async () => {\n    const response = await fetch('someurl');\n    const resJson = await response.json(); //here we can set the state with something\n  };\n\n  fetchFunc();\n}, []);","map":{"version":3,"sources":["C:/Users/Chunky Timmy/Documents/Programming/neagoie-stuff/reactCourse/crown-clothing/src/redux/user/user.types.js"],"names":["UserActionTypes","SET_CURRENT_USER","GOOGLE_SIGN_IN_START","SIGN_IN_SUCCESS","SIGN_IN_FAILURE","EMAIL_SIGN_IN_START","CHECK_USER_SESSION","SIGN_OUT_START","SIGN_OUT_SUCCESS","SIGN_OUT_FAILURE","SIGN_UP_START","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","useEffect","fetchFunc","response","fetch","resJson","json"],"mappings":"AAAA,MAAMA,eAAe,GAAG;AACvBC,EAAAA,gBAAgB,EAAE,kBADK;AAEvBC,EAAAA,oBAAoB,EAAE,sBAFC;AAGvBC,EAAAA,eAAe,EAAE,iBAHM;AAIvBC,EAAAA,eAAe,EAAE,iBAJM;AAKvBC,EAAAA,mBAAmB,EAAE,qBALE;AAMvBC,EAAAA,kBAAkB,EAAE,oBANG;AAOvBC,EAAAA,cAAc,EAAE,gBAPO;AAQvBC,EAAAA,gBAAgB,EAAE,kBARK;AASvBC,EAAAA,gBAAgB,EAAE,kBATK;AAUvBC,EAAAA,aAAa,EAAE,eAVQ;AAWvBC,EAAAA,eAAe,EAAE,iBAXM;AAYvBC,EAAAA,eAAe,EAAE;AAZM,CAAxB;AAeA,eAAeZ,eAAf;AAEAa,SAAS,CAAC,MAAM;AACf,QAAMC,SAAS,GAAG,YAAY;AAC7B,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,SAAD,CAA5B;AACA,UAAMC,OAAO,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAtB,CAF6B,CAG7B;AACA,GAJD;;AAKAJ,EAAAA,SAAS;AACT,CAPQ,EAON,EAPM,CAAT","sourcesContent":["const UserActionTypes = {\r\n\tSET_CURRENT_USER: 'SET_CURRENT_USER',\r\n\tGOOGLE_SIGN_IN_START: 'GOOGLE_SIGN_IN_START',\r\n\tSIGN_IN_SUCCESS: 'SIGN_IN_SUCCESS',\r\n\tSIGN_IN_FAILURE: 'SIGN_IN_FAILURE',\r\n\tEMAIL_SIGN_IN_START: 'EMAIL_SIGN_IN_START',\r\n\tCHECK_USER_SESSION: 'CHECK_USER_SESSION',\r\n\tSIGN_OUT_START: 'SIGN_OUT_START',\r\n\tSIGN_OUT_SUCCESS: 'SIGN_OUT_SUCCESS',\r\n\tSIGN_OUT_FAILURE: 'SIGN_OUT_FAILURE',\r\n\tSIGN_UP_START: 'SIGN_UP_START',\r\n\tSIGN_UP_SUCCESS: 'SIGN_UP_SUCCESS',\r\n\tSIGN_UP_FAILURE: 'SIGN_UP_FAILURE',\r\n};\r\n\r\nexport default UserActionTypes;\r\n\r\nuseEffect(() => {\r\n\tconst fetchFunc = async () => {\r\n\t\tconst response = await fetch('someurl');\r\n\t\tconst resJson = await response.json();\r\n\t\t//here we can set the state with something\r\n\t};\r\n\tfetchFunc();\r\n}, []);\r\n"]},"metadata":{},"sourceType":"module"}